name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  pull-requests: write

jobs:
  full:
    if: github.repository == 'facebook/bpfilter'
    strategy:
      fail-fast: false
      matrix:
        arch: ["X64", "ARM64"]
        mode: ["release", "debug"]
    container: "fedora:41"
    runs-on: [self-hosted, "${{ matrix.arch }}"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies (Fedora)
        run: |
          sudo dnf --disablerepo=* --enablerepo=fedora,updates --setopt=install_weak_deps=False -y install \
            bison bpftool clang clang-tools-extra cmake doxygen flex g++ git gcc jq lcov libasan libbpf-devel \
            libcmocka-devel libnl3-devel libubsan pkgconf python3-breathe python3-furo python3-linuxdoc \
            python3-sphinx
      - name: Configure build
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=${{ matrix.mode }}
      - name: Build
        run: make -C $GITHUB_WORKSPACE/build
      - name: Run unit tests
        run: make -C $GITHUB_WORKSPACE/build test
      - name: Coverage
        run: make -C $GITHUB_WORKSPACE/build coverage
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: build/doc/lcov.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Check style
        run: make -C $GITHUB_WORKSPACE/build check
      - name: Generate documentation
        run: make -C $GITHUB_WORKSPACE/build doc

  build:
    if: github.repository == 'facebook/bpfilter'
    strategy:
      fail-fast: false
      matrix:
        image: ["fedora:39", "fedora:40", "ubuntu:24.04"]
        arch: ["X64", "ARM64"]
    container: ${{ matrix.image }}
    runs-on: [self-hosted, "${{ matrix.arch }}"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies (Fedora)
        if: matrix.image == 'fedora:39' || matrix.image == 'fedora:40'
        run: |
          sudo dnf --disablerepo=* --enablerepo=fedora,updates --setopt=install_weak_deps=False -y install \
            bison bpftool clang clang-tools-extra cmake doxygen flex g++ git gcc jq lcov libasan libbpf-devel \
            libcmocka-devel libnl3-devel libubsan pkgconf python3-breathe python3-furo python3-linuxdoc \
            python3-sphinx
      - name: Install dependencies (Ubuntu)
        if: matrix.image == 'ubuntu:24.04'
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install \
            bison \
            clang \
            clang-format \
            clang-tidy \
            cmake \
            doxygen \
            flex \
            furo \
            git \
            jq \
            lcov \
            libbpf-dev \
            libcmocka-dev \
            libnl-3-dev \
            linux-tools-common \
            python3-breathe \
            python3-pip \
            python3-sphinx \
            pkgconf && \
          pip3 install --break-system-packages linuxdoc
      - name: Configure build
        run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build
      - name: Build
        run: make -C $GITHUB_WORKSPACE/build
      - name: Run unit tests
        run: make -C $GITHUB_WORKSPACE/build test
